name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10", "3.11" ]

    env:
      # Keep pipeline writes isolated in CI
      DATA_DIR: ${{ github.workspace }}/.ci/data
      MODELS_DIR: ${{ github.workspace }}/.ci/models
      OUTPUTS_DIR: ${{ github.workspace }}/.ci/outputs
      # Make pytest logs more readable in CI
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          elif [ -f pyproject.toml ]; then
            pip install -e .[dev] || pip install -e .
          else
            # Minimal fallback for tests (adjust as needed)
            pip install pytest pillow matplotlib scikit-learn torch torchvision --index-url https://download.pytorch.org/whl/cpu

      - name: Show environment
        run: |
          python -V
          pip list
          echo "DATA_DIR=$DATA_DIR"
          echo "MODELS_DIR=$MODELS_DIR"
          echo "OUTPUTS_DIR=$OUTPUTS_DIR"

      - name: Run tests
        run: |
          mkdir -p "$DATA_DIR" "$MODELS_DIR" "$OUTPUTS_DIR"
          pytest -q

      - name: Upload artifacts (outputs & logs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts-py${{ matrix.python-version }}
          path: |
            .ci/outputs
            outputs
            **/logs/*.log
          if-no-files-found: ignore
          retention-days: 7
